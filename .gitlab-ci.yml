# stages:
#   - deploy

# sync_to_github:
#   stage: deploy
#   script:
#     - apt-get update && apt-get install -y rsync openssh-client
#     - mkdir -p ~/.ssh
#     - echo "$GITHUB_SSH_KEY" > ~/.ssh/id_rsa
#     - chmod 600 ~/.ssh/id_rsa
#     - ssh-keyscan -H github.com >> ~/.ssh/known_hosts
#     - ls
#     - git clone --depth 1 git@github.com:YoubaDJAOUTI/DreamHabitat.git repo
#     - ls
#     - ls repo
#     - rsync -a --delete ./ repo/backend/  # Copie le contenu dans le dossier "back"
#     - cd repo
#     - git config user.name "GitLab CI"
#     - git config user.email "ci@example.com"
#     - git add backend/
#     - |
#       if ! git commit -m "Sync front from GitLab: $CI_COMMIT_SHORT_SHA"; then
#         echo "No changes to commit"
#       fi
#     - git push origin main
#   only:
#     - main


stages:
  - deploy

sync_to_github:
  stage: deploy
  script:
    - apt-get update && apt-get install -y rsync openssh-client
    - mkdir -p ~/.ssh
    - echo "$GITHUB_SSH_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H github.com >> ~/.ssh/known_hosts
    - echo "Cloning GitHub repository"
    - git clone --depth 1 git@github.com:YoubaDJAOUTI/DreamHabitat.git repo
    - echo "Listing files before rsync"
    - find . -type f
    - echo "Syncing files with rsync"
    - mkdir temp_sync
    - cp -r ./* temp_sync/
    - rsync -av --delete temp_sync/ repo/backend/
    - rm -rf temp_sync
    - cd repo
    - git config user.name "GitLab CI"
    - git config user.email "ci@example.com"
    - git add backend/
    - |
      if ! git commit -m "Sync from GitLab: $CI_COMMIT_SHORT_SHA"; then
        echo "No changes to commit"
      fi
    - git push origin main
  only:
    - main
